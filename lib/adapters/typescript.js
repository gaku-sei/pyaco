"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.save = void 0;
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var fileName = "tailwind.ts";
var escapeKeywords = function (str) {
    return ["static"].includes(str) ? str + "_" : str;
};
var generate = function (classes) {
    var typescriptify = function (_a) {
        var className = _a.className, name = _a.name;
        return "\nexport const " + escapeKeywords(name) + ": Tailwind = buildTailwind(\"" + className + "\");\n";
    };
    return "// Generated by tailwind-generator, be careful when editing this file\n\nconst opaque: unique symbol = Symbol();\n\nexport interface Tailwind {\n  readonly _opaque: typeof opaque\n  readonly _value: string\n}\n\nconst buildTailwind = (className: string): Tailwind => ({\n    _opaque: opaque,\n    _value: className,\n});\n\nexport const tailwind = (classNames: Tailwind[]): string => (\n    classNames.map(({ _value }) => _value).join(\" \")\n);\n" + classes.map(typescriptify).join("") + "\n  ";
};
exports.save = function (dir, classes) {
    fs_1.default.writeFileSync(path_1.default.join(dir, fileName), generate(classes));
};
