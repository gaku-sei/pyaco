// Generated by tailwind-generator, be careful when editing this file

// All credits go to Anders Hejlsberg for the Split type:
// https://github.com/microsoft/TypeScript/pull/40336#issue-476562046 
type Split<S extends string, D extends string> =
    string extends S ? string[] :
    S extends "" ? [] :
    S extends `${infer T}${D}${infer U}` ? [T, ...Split<U, D>] :
    [S];

export type Tailwind = 
{{#each nodes}}
  {{#with this}}
  | "{{className}}"
  {{/with}}
{{/each}};

export const tailwind = <
  T extends Split<T, ' '> extends Tailwind[]
    ? string
    : Tailwind
  >(className: T): string =>
  className
